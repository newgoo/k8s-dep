apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: statefulset-sc-0
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
allowedTopologies:  # 绑定调度的node节点
  - matchLabelExpressions:
      - key: node
        values:
          - k8s-node1-label
reclaimPolicy: Delete

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-statefulset-0
#  namespace: demo-namespace
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: statefulset-sc-0
  local:
    path: /root/statefulset-pv
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k8s-node1 # 这里配置的是集群中的该volume是在哪个主机名下

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-statefulset-1
#  namespace: demo-namespace
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: statefulset-sc-0
  local:
    path: /root/statefulset-pv
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - k8s-node2 # 这里配置的是集群中的该volume是在哪个主机名下

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  serviceName: "nginx"
  replicas: 2
  selector:
    matchLabels:
      app: nginx-statefulset
  template:
    metadata:
      labels:
        app: nginx-statefulset
    spec:
      containers:
        - name: nginx
          image: k8s.gcr.io/nginx-slim:0.8
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        storageClassName: statefulset-sc-0
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi