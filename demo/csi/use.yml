apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-hostpath-sc
provisioner: csi-hostpath
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: csi-hostpath-sc

---
kind: Pod
apiVersion: v1
metadata:
  name: volume-pv-test
spec:
  containers:
    - name: myfrontend
      image: nginx
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          subPath: "nginx-volume-pv-test"
          name: mypd
  nodeSelector: # 这个节点必须是和csi-hostpath-provisioner在同一个节点
    node: k8s-node1-label
  volumes:
    - name: mypd
      persistentVolumeClaim:
        claimName: csi-pvc

#---
#kind: Pod
#apiVersion: v1
#metadata:
#  name: my-csi-app
#spec:
#  containers:
#    - name: my-csi-app
#      image: busybox
#      imagePullPolicy: IfNotPresent
#      command: [ "sleep", "1000000" ]
#      volumeMounts:
#        - mountPath: "/data"
#          name: my-csi-volume
#  volumes:
#    - name: my-csi-volume
#      persistentVolumeClaim:
#        claimName: csi-pvc

#---
#kind: Pod
#apiVersion: v1
#metadata:
#  name: mypod
#spec:
#  containers:
#    - name: myfrontend
#      image: nginx
#      volumeMounts:
#        - mountPath: "/var/www/html"
#          name: mypd
#  volumes:
#    - name: mypd
#      persistentVolumeClaim:
#        claimName: csi-pvc
